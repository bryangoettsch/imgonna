version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: imgonna-postgres
    environment:
      POSTGRES_DB: imgonna
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - imgonna-network

  # Go API Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: imgonna-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=imgonna
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSL_MODE=disable
      - PORT=8080
      - ENVIRONMENT=development
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    networks:
      - imgonna-network
    command: ["./main"]

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: imgonna-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - imgonna-network

volumes:
  postgres_data:

networks:
  imgonna-network:
    driver: bridge